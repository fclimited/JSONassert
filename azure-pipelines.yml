pool:
  vmImage: "Ubuntu 16.04"

name: $(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

steps:
  - task: ArtifactoryMaven@1
    displayName: Artifactory mvn clean package
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean package'
      artifactoryResolverService: 'flightcentre-integration-artifactory'
      targetResolveReleaseRepo: 'flightcentre-integration-maven'
      targetResolveSnapshotRepo: 'flightcentre-integration-maven'
      artifactoryDeployService: 'flightcentre-integration-artifactory'
      targetDeployReleaseRepo: 'flightcentre-integration-maven'
      targetDeploySnapshotRepo: 'flightcentre-integration-maven'
      collectBuildInfo: true
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
  - task: DownloadSecureFile@1
    displayName: Download secure file
    inputs:
      secureFile: 'flightcentre-integration-maven-m2-settings-xml'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  - task: ArtifactoryMaven@1
    displayName: Artifactory mvn deploy
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'deploy'
      options: '--settings $DOWNLOADSECUREFILE_SECUREFILEPATH -DaltDeploymentRepository=flightcentre-integration-maven::default::https://flightcentre.jfrog.io/flightcentre/flightcentre-integration-maven'
      artifactoryResolverService: 'flightcentre-integration-artifactory'
      targetResolveReleaseRepo: 'flightcentre-integration-maven'
      targetResolveSnapshotRepo: 'flightcentre-integration-maven'
      artifactoryDeployService: 'flightcentre-integration-artifactory'
      targetDeployReleaseRepo: 'flightcentre-integration-maven'
      targetDeploySnapshotRepo: 'flightcentre-integration-maven'
      collectBuildInfo: true
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  - task: ArtifactoryPublishBuildInfo@1
    displayName: Artifactory Publish Build Info
    inputs:
      artifactoryService: 'flightcentre-integration-artifactory'
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  - task: ArtifactoryXrayScan@1
    displayName: Artifactory Xray Scan
    inputs:
      artifactoryService: 'flightcentre-integration-artifactory'
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      allowFailBuild: false
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))